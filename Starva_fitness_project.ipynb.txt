1. Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Load the Cleaned and Merged Data
df = pd.read_csv("merged_daily_data.csv")

# 3. Preview the Dataset
print(df.head())
print("\nColumns:", df.columns)

# 4. Convert Date Column
df['ActivityDay'] = pd.to_datetime(df['ActivityDay'])

# 5. Descriptive Statistics
print("\nDescriptive Stats:\n", df.describe())

======================================
#  VISUALIZATION SECTION
# =====================================
           Daily Calories Burned

Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(12, 5))
sns.lineplot(data=df, x='ActivityDay', y='calories')
plt.title(' Daily Calories Burned Over Time')
plt.xlabel('Date')
plt.ylabel('Calories')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()



               Sleep Duration Distribution

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 5))
sns.histplot(data=df, x='TotalMinutesAsleep', bins=20, kde=True)
plt.title(' Sleep Duration Distribution')
plt.xlabel('Total Minutes Asleep')
plt.ylabel('Frequency')
plt.tight_layout()
plt.show()

              Activity Intensity BreakdowN

import matplotlib.pyplot as plt

activity_df = df[['ActivityDay', 'SedentaryMinutes', 'LightlyActiveMinutes', 'FairlyActiveMinutes', 'VeryActiveMinutes']]
activity_df.set_index('ActivityDay', inplace=True)
activity_df.plot(kind='bar', stacked=True, figsize=(16, 6), width=0.8)
plt.title('Daily Activity Intensity Breakdown')
plt.xlabel('Date')
plt.ylabel('Minutes')
plt.xticks(rotation=45)
plt.legend(title='Activity Type')
plt.tight_layout()
plt.show()

              DAILY STEPS OVER TIME

import matplotlib.pyplot as plt
import seaborn as sns
df['ActivityDay'] = pd.to_datetime(df['ActivityDay'])

plt.figure(figsize=(12, 6))
sns.lineplot(data=df, x='ActivityDay', y='StepTotal')
plt.title('Daily Steps Over Time')
plt.xlabel('Date')
plt.ylabel('Step Total')
plt.show()

 